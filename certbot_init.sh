#!/bin/bash

# Установите ваш реальный email и домен здесь
EMAIL="ligioner29@mail.ru" # !!! ОБЯЗАТЕЛЬНО ЗАМЕНИТЬ !!!
DOMAIN="lek29.ru"
DOMAIN_WWW="www.lek29.ru"

# --------------------------------------------------------
# 1. Очистка и остановка всех старых контейнеров
# --------------------------------------------------------
echo "Остановка и удаление предыдущих контейнеров и сетей..."
docker compose -f docker-compose.prod.yaml down --volumes --remove-orphans

# --------------------------------------------------------
# 2. Проверка существования каталогов Certbot
# --------------------------------------------------------
# Certbot и Nginx должны монтировать эти папки
mkdir -p ./certbot/www
mkdir -p ./certbot/conf

# --------------------------------------------------------
# 3. Запуск только Nginx в фоне с init-конфигом
# --------------------------------------------------------
echo "Запуск Nginx для прохождения проверки Certbot..."
# Используем имя сервиса 'nginx'
docker compose -f docker-compose.prod.yaml up -d nginx

# --------------------------------------------------------
# 4. Гарантированное ожидание и проверка статуса контейнера
# --------------------------------------------------------
# Гарантированная пауза 10 секунд, чтобы Nginx успел запуститься и,
# если упал, чтобы Docker это зафиксировал.
echo "Пауза 10 секунд для инициализации Nginx..."
sleep 10

# Проверяем, что контейнер Nginx запущен и не упал сразу после старта
NGINX_STATUS=$(docker compose -f docker-compose.prod.yaml ps -q nginx | xargs docker inspect -f '{{.State.Status}}')

if [ "$NGINX_STATUS" != "running" ]; then
    echo -e "\n--------------------------------------------------------"
    echo -e "⛔ КРИТИЧЕСКАЯ ОШИБКА NGINX ⛔"
    echo "Nginx не смог запуститься. Проверьте логи: 'docker compose logs nginx-1'"
    echo "Ожидаемый статус 'running', текущий статус: '$NGINX_STATUS'."
    echo -e "--------------------------------------------------------"
    # Оставляем контейнеры запущенными для отладки
    exit 1
fi

echo "Nginx готов. (Статус $NGINX_STATUS)"

# --------------------------------------------------------
# 5. Запуск Certbot для получения сертификатов
# --------------------------------------------------------
echo "Nginx готов. Запускаем Certbot..."
# Запускаем Certbot. В случае сбоя, оставляем контейнеры Nginx запущенными для диагностики.
docker compose -f docker-compose.prod.yaml run --rm certbot \
    certonly --webroot \
    -w /var/www/certbot \
    --force-renewal \
    --email "$EMAIL" \
    -d "$DOMAIN" -d "$DOMAIN_WWW" \
    --rsa-key-size 4096 \
    --agree-tos \
    --noninteractive || {
        echo -e "\n--------------------------------------------------------"
        echo -e "⛔ КРИТИЧЕСКАЯ ОШИБКА CERTBOT ⛔"
        echo -e "Certbot не смог получить сертификат. Контейнеры Nginx оставлены запущенными."
        echo -e "--------------------------------------------------------"
        # Оставляем контейнеры запущенными для отладки
        exit 1
    }

# --------------------------------------------------------
# 6. Обновление конфигурации Nginx и Перезапуск
# --------------------------------------------------------
# Проверяем, были ли сгенерированы сертификаты
if [ -f "./certbot/conf/live/$DOMAIN/fullchain.pem" ]; then
    echo "Сертификаты успешно получены. Переключение Nginx на продакшен-конфиг..."

    # ПЕРЕКЛЮЧЕНИЕ КОНФИГА NGINX (Заменяем init на prod)
    # Сначала останавливаем Nginx, чтобы изменить монтирование.
    docker compose -f docker-compose.prod.yaml stop nginx

    # Удаляем init-конфиг (НЕ ТРОГАЙТЕ ОСТАЛЬНЫЕ ТОМА!)
    docker compose -f docker-compose.prod.yaml rm -f nginx

    # Теперь запускаем ВСЕ сервисы в режиме production, используя prod.conf
    # (Вам нужно убедиться, что в docker-compose.prod.yaml в секции nginx:volumes
    # есть условие для продакшен-конфига. Этот скрипт не меняет compose-файл,
    # он просто удаляет контейнер, чтобы следующий 'up' использовал новое состояние.)

    echo "Запуск продакшен-среды с новым сертификатом..."
    docker compose -f docker-compose.prod.yaml up -d --build

    echo -e "\n--------------------------------------------------------"
    echo -e "✅ УСПЕХ! СЕРТИФИКАТЫ ПОЛУЧЕНЫ И ВСЕ СЕРВИСЫ ЗАПУЩЕНЫ."
    echo -e "--------------------------------------------------------"
else
    echo "Certbot прошел, но файлы сертификатов не найдены. Остановка сервисов."
    docker compose -f docker-compose.prod.yaml down
    exit 1
fi
