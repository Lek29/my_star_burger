#!/bin/bash

# Установите ваш реальный email и домен здесь
EMAIL="your_email@example.com" # !!! ОБЯЗАТЕЛЬНО ЗАМЕНИТЬ !!!
DOMAIN="lek29.ru"
DOMAIN_WWW="www.lek29.ru"

# --------------------------------------------------------
# 1. Очистка и остановка всех старых контейнеров
# --------------------------------------------------------
echo "Остановка и удаление предыдущих контейнеров и сетей..."
docker compose -f docker-compose.prod.yaml down --volumes --remove-orphans

# --------------------------------------------------------
# 2. Проверка существования каталогов Certbot
# --------------------------------------------------------
# Certbot и Nginx должны монтировать эти папки
mkdir -p ./certbot/www
mkdir -p ./certbot/conf

# --------------------------------------------------------
# 3. Запуск только Nginx в фоне с init-конфигом
# --------------------------------------------------------
echo "Запуск Nginx для прохождения проверки Certbot..."
# Используем имя сервиса 'nginx'
docker compose -f docker-compose.prod.yaml up -d nginx

# --------------------------------------------------------
# 4. Проверка готовности Nginx (Асинхронный цикл)
# --------------------------------------------------------
echo "Проверка готовности Nginx на порту 80 (макс. 30 сек)..."
MAX_ATTEMPTS=10
ATTEMPTS=0
# Цикл будет проверять ответ Nginx на хост-порту 80
while [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; do
    # curl -s: тихий режим, -o /dev/null: игнорируем тело ответа, -w "%{http_code}": выводим только код.
    # http://localhost:80/ - проверяем, что Docker пробросил порт и Nginx слушает.
    STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:80/ || true)

    # Nginx с init.conf возвращает 404, что является подтверждением его готовности.
    if [ "$STATUS_CODE" = "404" ] || [ "$STATUS_CODE" = "200" ]; then
        echo "Nginx готов. (Статус $STATUS_CODE)"
        break
    fi

    ATTEMPTS=$((ATTEMPTS+1))
    echo "Nginx не готов. Попытка $ATTEMPTS/$MAX_ATTEMPTS. (Статус $STATUS_CODE). Ожидание 3 сек..."
    sleep 3
done

if [ $ATTEMPTS -eq $MAX_ATTEMPTS ]; then
    echo -e "\n--------------------------------------------------------"
    echo -e "⛔ КРИТИЧЕСКАЯ ОШИБКА NGINX ⛔"
    echo -e "Nginx не ответил на порту 80 после 30 секунд. Проверьте логи Nginx (docker compose logs nginx-1)."
    echo -e "--------------------------------------------------------"
    # Оставляем контейнеры запущенными для отладки
    exit 1
fi

# --------------------------------------------------------
# 5. Запуск Certbot для получения сертификатов
# --------------------------------------------------------
echo "Nginx готов. Запускаем Certbot..."
docker compose -f docker-compose.prod.yaml run --rm certbot \
    certonly --webroot \
    -w /var/www/certbot \
    --force-renewal \
    --email "$EMAIL" \
    -d "$DOMAIN" -d "$DOMAIN_WWW" \
    --rsa-key-size 4096 \
    --agree-tos \
    --noninteractive || {
        echo -e "\n--------------------------------------------------------"
        echo -e "⛔ КРИТИЧЕСКАЯ ОШИБКА CERTBOT ⛔"
        echo -e "Certbot не смог получить сертификат. Контейнеры Nginx оставлены запущенными."
        echo -e "--------------------------------------------------------"
        # Оставляем контейнеры запущенными для отладки
        exit 1
    }

# --------------------------------------------------------
# 6. Обновление конфигурации Nginx и Перезапуск
# --------------------------------------------------------
if [ -f "./certbot/conf/live/$DOMAIN/fullchain.pem" ]; then
    echo "Сертификаты успешно получены. Переключение Nginx на продакшен-конфиг..."

    # ... (логика переключения конфига)

    echo "Остановка сервисов..."
    docker compose -f docker-compose.prod.yaml down

    echo "Запуск продакшен-среды с новым сертификатом..."
    docker compose -f docker-compose.prod.yaml up -d --build

    echo -e "\n--------------------------------------------------------"
    echo -e "✅ УСПЕХ! СЕРТИФИКАТЫ ПОЛУЧЕНЫ И ВСЕ СЕРВИСЫ ЗАПУЩЕНЫ."
    echo -e "--------------------------------------------------------"
else
    echo "Certbot прошел, но файлы сертификатов не найдены. Остановка сервисов."
    docker compose -f docker-compose.prod.yaml down
    exit 1
fi
