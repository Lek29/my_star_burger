networks:
  app-net:
    driver: bridge

volumes:
  db_data:
  frontend_dist_vol:
    driver: local
  static_files_vol:
    driver: local
  # Эти тома нужны, но пока не используются в сервисах, только для nginx:
  certbot_conf_vol:
  certbot_www_vol:

services:
  db:
    image: postgres:15
    container_name: starburger_db
    restart: always
    environment:
      POSTGRES_DB: starburger
      POSTGRES_USER: starburger
      POSTGRES_PASSWORD: starburger
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U starburger"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: [app-net]

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: backend
    command: gunicorn star_burger.wsgi:application --bind 0.0.0.0:8000 --workers 3
    environment:
      - PYTHONPATH=/app
    volumes:
      - static_files_vol:/app/staticfiles
      - ./media:/app/media
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      frontend:
        condition: service_completed_successfully
    restart: always
    networks: [app-net]
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent -L http://localhost:8000/admin/ || exit 1"]
      start_period: 30s
      interval: 15s
      timeout: 5s
      retries: 15


  frontend:
    build:
      context: ./frontend
    container_name: frontend
    volumes:
      - frontend_dist_vol:/app/dist
      - ./frontend/bundles-src:/app/bundles-src:ro
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/package-lock.json:/app/package-lock.json:ro
    command: ["npm", "run", "build"]
    networks: [app-net]
    restart: "no"

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot_conf_vol:/etc/letsencrypt
      - certbot_www_vol:/var/www/certbot
      - frontend_dist_vol:/var/www/bundles:ro
      - static_files_vol:/var/www/static:ro
      - ./media:/var/www/media:ro
    depends_on:
      - backend
    restart: always
    networks: [app-net]
